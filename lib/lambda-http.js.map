{"version":3,"sources":["../src/lambda-http.ts"],"names":[],"mappings":"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","file":"lambda-http.js","sourcesContent":["import IncomingMessage from './incoming-message';\nimport ServerResponse from './server-response';\nimport _ from 'lodash-firecloud';\nimport http from 'http';\n\nimport {\n  Context,\n  Event,\n  Next,\n  Options\n} from './types';\n\nexport class LambdaHttp {\n  _e: Event;\n\n  _ctx: Context;\n\n  _next: Next;\n\n  _options: Options;\n\n  _connection: {\n    destroy: (err?: Error) => void;\n  };\n\n  _req: IncomingMessage;\n\n  _res: ServerResponse;\n\n  METHODS: typeof http.METHODS;\n\n  STATUS_CODES: typeof http.STATUS_CODES;\n\n  onUncaughtException: NodeJS.UncaughtExceptionListener;\n\n  onUnhandledRejection: NodeJS.UnhandledRejectionListener;\n\n  onInternalServerError: () => void;\n\n  // eslint-disable-next-line max-params\n  constructor(\n    e: Event,\n    ctx: Context,\n    next: Next = _.noop.bind(_),\n    options: Options = {}\n  ) {\n    _.defaults(options, {\n      onUncaughtException: this._onUncaughtException.bind(this),\n      onUnhandledRejection: this._onUnhandledRejection.bind(this),\n      onInternalServerError: this._onInternalServerError.bind(this)\n    });\n\n    // NOTE normalizing\n    _.defaultsDeep(e, {\n      pathParameters: {},\n      requestContext: {\n        identity: {}\n      },\n      queryStringParameters: {},\n      stageVariables: {}\n    });\n    _.defaultsDeep(ctx, {\n      clientContext: {},\n      identity: {}\n    });\n\n    _.defaultsDeep(ctx, {\n      env: e.stageVariables,\n      requestContext: e.requestContext\n    });\n\n    _.defaultsDeep(ctx, {\n      env: process.env\n    });\n\n    this._e = e;\n    this._ctx = ctx;\n    this._next = next;\n    this._options = options;\n\n    this.onInternalServerError = options.onInternalServerError;\n    process.on('uncaughtException', options.onUncaughtException);\n    process.on('unhandledRejection', options.onUnhandledRejection);\n\n    this._connection = {\n      destroy: function(_err?: Error) {\n        // _.noop\n      }\n    };\n    this._req = new IncomingMessage(this._connection, e, ctx);\n    this._res = new ServerResponse(this._req, ctx, function(...args) {\n      process.removeListener('uncaughtException', options.onUncaughtException);\n      process.removeListener('unhandledRejection', options.onUnhandledRejection);\n      next(...args);\n    });\n\n    _.merge(this, _.pick(http, [\n      'METHODS',\n      'STATUS_CODES'\n    ]));\n  }\n\n  createServer(requestListener: (req: IncomingMessage, res: ServerResponse) => void): void {\n    // we simulate that a HTTP request was received as soon as the server was created\n    requestListener(this._req, this._res);\n  }\n\n  _onUncaughtException(err: Error): void {\n    // eslint-disable-next-line no-console\n    console.error(err);\n\n    this.onInternalServerError();\n  }\n\n  _onUnhandledRejection(reason: Error, p: Promise<unknown>): void {\n    // eslint-disable-next-line no-console\n    console.error(reason, p);\n\n    this.onInternalServerError();\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  _onInternalServerError(): void {\n    // eslint-disable-next-line no-process-exit\n    process.exit(1);\n  }\n}\n\nexport default LambdaHttp;\n"]}